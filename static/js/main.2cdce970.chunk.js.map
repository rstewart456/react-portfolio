{"version":3,"sources":["assets/image/coding-bg.png","assets/image/codeproject.jpg","firebase.js","components/Home.js","components/Projects.js","components/Nav.js","App.js","actions/projects.js","actions/types.js","serviceWorker.js","reducers/projects.js","reducers/index.js","store.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","Home","id","className","style","backgroundImage","codeimage","href","path","mdiEmail","title","size","mdiLinkedin","mdiGithub","Projects","proj","useSelector","state","projects","project","codeproject","map","doc","key","src","image","alt","name","paragraph","target","rel","location","github","Nav","useState","isOpen","setisOpen","window","innerWidth","width","setwidth","updateWidth","useEffect","addEventListener","removeEventListener","isMenu","onClick","mdiMenu","mdiCloseCircle","to","smooth","duration","App","dispatch","useDispatch","a","collection","orderBy","get","subscribe","data","docs","rdata","reverse","type","payload","console","log","Boolean","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mMCa3CC,IAASC,cAVM,CACbC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,cACnBC,MAAO,6CAKF,IAAMC,EAAKT,IAASU,Y,uDCTdC,EAAO,WAEhB,OACE,yBAAKC,GAAG,OACNC,UAAU,6CACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASC,IAAT,QAExB,yBAAKH,UAAU,8IACb,yBAAKA,UAAU,mCAAf,cACa,qCADb,4BAGA,uBAAGA,UAAU,kCAAb,gTAKmC,6BACjC,6BANF,kMAUA,yBAAKA,UAAU,8CAAf,cAGA,yBAAKA,UAAU,kDACb,uBAAGI,KAAK,gCACN,kBAAC,IAAD,CAAMJ,UAAU,iCAAiCK,KAAMC,IAAUC,MAAM,QAAQC,KAAM,KAEvF,uBAAGJ,KAAK,mDACN,kBAAC,IAAD,CAAMJ,UAAU,iCAAiCK,KAAMI,IAAaF,MAAM,WAAWC,KAAM,KAE7F,uBAAGJ,KAAK,kCACN,kBAAC,IAAD,CAAMJ,UAAU,iCAAiCK,KAAMK,IAAWH,MAAM,SAASC,KAAM,S,iBCMrFG,EAvCC,WACjB,IAAMC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,WAE7C,OACE,yBAAKjB,GAAG,WACRC,UAAU,6CACVC,MAAO,CAAEC,gBAAgB,OAAD,OAASe,IAAT,QACtB,yBAAKjB,UAAU,0BACf,yBAAKA,UAAU,yCAAf,iBACA,yBAAKA,UAAU,8DACVY,EAAKM,KAAI,SAACC,GAAD,OACR,yBAAKnB,UAAU,OAAOoB,IAAKD,EAAIpB,IAC7B,yBAAKC,UAAU,0DACf,yBAAKA,UAAU,aAAaqB,IAAKF,EAAIG,MAAOC,IAAI,4BAChD,yBAAKvB,UAAU,aACf,yBAAKA,UAAU,0BAA0BmB,EAAIK,MAC3C,uBAAGxB,UAAU,gCACVmB,EAAIM,YAGT,yBAAKzB,UAAU,kCACb,uBAAG0B,OAAO,SAASC,IAAI,sBAAsBvB,KAAMe,EAAIS,SAAU5B,UAAU,oGAA3E,aACA,uBAAG0B,OAAO,SAASC,IAAI,sBAAsBvB,KAAMe,EAAIU,OAAQ7B,UAAU,+FAAzE,oB,QCuDH8B,EA3EH,WAAO,IAAD,EACYC,oBAAS,GADrB,mBACTC,EADS,KACDC,EADC,OAEUF,mBAASG,OAAOC,YAF1B,mBAETC,EAFS,KAEFC,EAFE,KAIVC,EAAc,WAClBD,EAASH,OAAOC,aAKlBI,qBAAU,WAKR,OAJAL,OAAOM,iBAAiB,SAAUF,GAC9BF,EAAQ,MACVH,GAAU,GAEL,kBAAMC,OAAOO,oBAAoB,SAAUH,MACjD,CAACF,IAEJ,IAAMM,EAAS,WACbT,GAAWD,IAGb,OACE,6BACE,yBAAKhC,UAAU,+FACb,yBAAKA,UAAU,qCACb,iDACCgC,EACC,4BAAQhC,UAAU,YAAY2C,QAASD,GACrC,kBAAC,IAAD,CAAMrC,KAAMuC,IAASrC,MAAM,WAAWC,KAAM,KAG9C,4BAAQR,UAAU,YAAY2C,QAASD,GACrC,kBAAC,IAAD,CAAMrC,KAAMwC,IAAgBtC,MAAM,YAAYC,KAAM,MAI1D,yBACER,UACGgC,EAEG,oDADA,6DAIN,kBAAC,OAAD,CACEc,GAAG,OACHC,QAAQ,EACRC,SAAU,IACVL,QAAS,kBAAMV,GAAWD,IAC1BhC,UAAU,4DALZ,QASA,kBAAC,OAAD,CACE8C,GAAG,WACHC,QAAQ,EACRC,SAAU,IACVL,QAAS,kBAAMV,GAAWD,IAC1BhC,UAAU,4DALZ,cAWJ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uEACX,yBAAKA,UAAU,QAAf,eACA,yBAAKA,UAAU,QAAf,gDClDKiD,MAlBf,WAEE,IAAMC,EAAWC,cAOjB,OALAZ,qBAAU,WAER,OADAW,ECTuB,uCAAM,WAAMA,GAAN,mBAAAE,EAAA,+EAEDxD,EAAGyD,WAAW,YAAYC,QAAQ,SAASC,MAF1C,OAEnBC,EAFmB,OAGnBC,EAAOD,EAAUE,KAAKxC,KAAI,SAACC,GAAD,oBAC5BpB,GAAIoB,EAAIpB,IACLoB,EAAIsC,WAELE,EAAQF,EAAKG,UAEnBV,EAAS,CACLW,KCbgB,eDchBC,QAASH,IAXY,gDAczBI,QAAQC,IAAR,MAdyB,yDAAN,uDDUhB,kBAAMd,OACZ,CAACA,IAGF,kBAAC,EAAD,OGLgBe,QACW,cAA7B/B,OAAON,SAASsC,UAEe,UAA7BhC,OAAON,SAASsC,UAEhBhC,OAAON,SAASsC,SAASC,MACvB,2D,WChBAC,EAAe,CACjBpD,QAAS,ICAEqD,4BAAgB,CAC3BtD,SDEW,WAAwC,IAA/BD,EAA8B,uDAAtBsD,EAAcE,EAAQ,uCAC1CT,EAAkBS,EAAlBT,KAAMC,EAAYQ,EAAZR,QAEd,OAAQD,GACJ,IFVoB,eEWhB,OAAO,2BACA/C,GADP,IAEIE,QAAS8C,IAEjB,QACI,OAAOhD,M,gBETbyD,EAAa,CAACC,KAQLC,EANDC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCJzCO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUP,MAAOA,GACjB,kBAAC,EAAD,QAGFQ,SAASC,eAAe,SJqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3B,QAAQ2B,MAAMA,EAAMC,c","file":"static/js/main.2cdce970.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coding-bg.1cb86b02.png\";","module.exports = __webpack_public_path__ + \"static/media/codeproject.107a63dd.jpg\";","import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyClqlVbnlx1V4Se7sj5DmfrPd_7NW0uNpQ',\r\n  authDomain: 'portfolio-c6881.firebaseapp.com',\r\n  databaseURL: 'https://portfolio-c6881.firebaseio.com',\r\n  projectId: 'portfolio-c6881',\r\n  storageBucket: 'portfolio-c6881.appspot.com',\r\n  messagingSenderId: '36642616277',\r\n  appId: '1:36642616277:web:3836d5a08908b8a424035c',\r\n};\r\n\r\nfirebase.initializeApp(config)\r\n\r\nexport const db = firebase.firestore()","import React from 'react'\r\nimport Icon from '@mdi/react'\r\nimport { mdiEmail, mdiLinkedin, mdiGithub } from '@mdi/js';\r\nimport codeimage from '../assets/image/coding-bg.png';\r\n\r\n\r\nexport const Home = () => {\r\n\r\n    return (\r\n      <div id='home'\r\n        className='text-white h-full lg:min-h-screen bg-fixed'\r\n        style={{ backgroundImage: `url(${codeimage}) ` }}\r\n      >\r\n        <div className='hometext w-screen h-full lg:h-screen opacity-80 rotate-180 bg-scroll lg:w-1/2 bg-black lg:float-right flex-row justify-center items-center'>\r\n          <div className='p-12 pt-24 text-3xl lg:text-5xl'>\r\n            My name is <b>Ronald</b> and I'm a web Developer\r\n          </div>\r\n          <p className='lg:text-lg px-12 font-semibold'>\r\n            I am passionate about technology and the web. I remember when Amazon\r\n            first started out just selling books online and now Amazon is within\r\n            the top 5 companies in the world. I also remember the battle of\r\n            Microsoft Explorer and Netscape browser. I am excited to see what\r\n            another twenty years will bring. <br />\r\n            <br />I am also a nerd at heart. I love sci-fi, and anime. Some of\r\n            my favorite shows are The Flash, The Expanse, Star Wars, Star Trek,\r\n            Tenchi Muyo! War on Geminar, and The Rise of the Shield Hero.\r\n          </p>\r\n          <div className='text-2xl lg:text-3xl text-center py-6 px-8'>\r\n            Contact Me\r\n          </div>\r\n          <div className='flex px-6 pb-12 lg:px-24 px-12 justify-between'>\r\n            <a href='mailto:rstewart456@gmail.com'>\r\n              <Icon className='hover:bg-indigo-800 rounded-lg' path={mdiEmail} title='Email' size={3} />\r\n            </a>\r\n            <a href='https://linkedin.com/in/ronald-stewart-6544808b'>\r\n              <Icon className='hover:bg-indigo-800 rounded-lg' path={mdiLinkedin} title='Linkedin' size={3} />\r\n            </a>\r\n            <a href='https://github.com/rstewart456'>\r\n              <Icon className='hover:bg-indigo-800 rounded-lg' path={mdiGithub} title='Github' size={3} />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport codeproject from '../assets/image/codeproject.jpg';\r\n\r\nconst Projects = () => {\r\nconst proj = useSelector(state => state.projects.project)\r\n\r\n    return (\r\n      <div id='projects' \r\n      className='text-black h-full lg:min-h-screen bg-fixed' \r\n      style={{ backgroundImage: `url(${codeproject}) ` }}>\r\n        <div className='projecttext opacity-90'>\r\n        <div className='text-white text-center text-5xl py-12'>Projects Page</div>\r\n        <div className='flex flex-row flex-wrap justify-between justify-center p-8'>\r\n            {proj.map((doc) => (\r\n              <div className='py-6' key={doc.id}>\r\n                <div className=\"max-w-sm rounded overflow-hidden shadow-lg bg-gray-100\">\r\n                <img className=\"w-full p-1\" src={doc.image} alt=\"Sunset in the mountains\" />\r\n                <div className=\"px-6 py-4\">\r\n                <div className=\"font-bold text-xl mb-2\">{doc.name}</div>\r\n                  <p className=\"text-gray-700 text-base h-32\">\r\n                    {doc.paragraph}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex justify-between px-6 py-4\">\r\n                  <a target='_blank' rel=\"noopener noreferrer\" href={doc.location} className=\"inline-block hover:bg-indigo-500 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">Live Demo</a>\r\n                  <a target='_blank' rel=\"noopener noreferrer\" href={doc.github} className=\"inline-block hover:bg-indigo-500 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\">Github</a>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nProjects.propTypes = {\r\n    proj: PropTypes.array.isRequired,\r\n    getProjects: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default (Projects)","import React, { useState, useEffect } from 'react'\r\nimport Icon from '@mdi/react'\r\nimport { mdiMenu, mdiCloseCircle } from '@mdi/js'\r\nimport { Home } from './Home'\r\nimport Projects from './Projects'\r\nimport { Link } from 'react-scroll'\r\n\r\nconst Nav = () => {\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [width, setwidth] = useState(window.innerWidth);\r\n\r\n  const updateWidth = () => {\r\n    setwidth(window.innerWidth);\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', updateWidth);\r\n    if (width < 1024) {\r\n      setisOpen(true);\r\n    }\r\n    return () => window.removeEventListener('resize', updateWidth);\r\n  }, [width]);\r\n\r\n  const isMenu = () => {\r\n    setisOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='code fixed text-white p-2 h-12 w-full bg-black lg:flex items-center lg:justify-between z-50'>\r\n        <div className='flex justify-between items-center'>\r\n          <div>Ronald Portfolio</div>\r\n          {isOpen ? (\r\n            <button className='lg:hidden' onClick={isMenu}>\r\n              <Icon path={mdiMenu} title='menuIcon' size={1} />\r\n            </button>\r\n          ) : (\r\n            <button className='lg:hidden' onClick={isMenu}>\r\n              <Icon path={mdiCloseCircle} title='closeIcon' size={1} />\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            !isOpen\r\n              ? 'block bg-black lg:flex lg:justify-between lg:items-center'\r\n              : 'hidden lg:flex lg:justify-between lg:items-center'\r\n          }\r\n        >\r\n          <Link\r\n            to='home'\r\n            smooth={true}\r\n            duration={700}\r\n            onClick={() => setisOpen(!isOpen)}\r\n            className='block p-3 text-white bg-black hover:text-indigo-600 link'\r\n          >\r\n            Home\r\n          </Link>\r\n          <Link\r\n            to='projects'\r\n            smooth={true}\r\n            duration={700}\r\n            onClick={() => setisOpen(!isOpen)}\r\n            className='block p-3 text-white bg-black hover:text-indigo-600 link'\r\n          >\r\n            Projects\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <Home />\r\n      <Projects />\r\n      <div className='flex justify-between items-center h-12 bottom-0 bg-black text-white'>\r\n          <div className='px-4'>MIT License</div>\r\n          <div className='px-4'>Thank you for visiting my portfolio page.</div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Nav","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { getProjects } from './actions/projects'\r\nimport { useDispatch } from 'react-redux'\r\nimport Nav from './components/Nav'\r\n\r\n\r\nfunction App() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getProjects())\r\n    return () => dispatch()\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Nav />\r\n  );\r\n}\r\n\r\nApp.propTypes = {\r\n  getProjects: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default App;","import { GET_PROJECTS } from './types'\r\nimport { db } from '../firebase'\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    try {\r\n        const subscribe = await db.collection('projects').orderBy('level').get()\r\n        const data = subscribe.docs.map((doc) => ({\r\n            id: doc.id,\r\n            ...doc.data()\r\n        }))\r\n        const rdata = data.reverse()\r\n\r\n        dispatch({\r\n            type: GET_PROJECTS,\r\n            payload: rdata\r\n        }) \r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n}","export const GET_PROJECTS = 'GET_PROJECTS'","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { GET_PROJECTS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    project: [],\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action\r\n\r\n    switch (type) {\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                project: payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport projects from './projects'\r\n\r\nexport default combineReducers({\r\n    projects\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)), \r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}